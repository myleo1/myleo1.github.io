<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>Leo&#39;s iSite</title>
        <link>http://myleo1.github.io/</link>
        <description>Leo&#39;s iSite</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>leo@leosgo.com (Leo)</managingEditor>
            <webMaster>leo@leosgo.com (Leo)</webMaster><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Tue, 20 Sep 2022 21:21:54 &#43;0800</lastBuildDate>
            <atom:link href="http://myleo1.github.io/index.xml" rel="self" type="application/rss+xml" />
        <item>
    <title>Go底层之Map实现原理</title>
    <link>http://myleo1.github.io/go%E5%BA%95%E5%B1%82%E4%B9%8Bmap%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86/</link>
    <pubDate>Tue, 20 Sep 2022 21:21:54 &#43;0800</pubDate>
    <author>Leo</author>
    <guid>http://myleo1.github.io/go%E5%BA%95%E5%B1%82%E4%B9%8Bmap%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86/</guid>
    <description><![CDATA[概述 在Go语言中，Map是常用的数据类型之一，其底层与其他语言类似，其底层使用哈希表作为数据结构，而使用哈希表，最重要的是解决哈希冲突，Go]]></description>
</item>
<item>
    <title>深入剖析Kubernetes之一（预习篇）</title>
    <link>http://myleo1.github.io/%E6%B7%B1%E5%85%A5%E5%89%96%E6%9E%90kubernetes%E4%B9%8B%E4%B8%80%E9%A2%84%E4%B9%A0%E7%AF%87/</link>
    <pubDate>Fri, 29 Jul 2022 20:10:31 &#43;0800</pubDate>
    <author>Leo</author>
    <guid>http://myleo1.github.io/%E6%B7%B1%E5%85%A5%E5%89%96%E6%9E%90kubernetes%E4%B9%8B%E4%B8%80%E9%A2%84%E4%B9%A0%E7%AF%87/</guid>
    <description><![CDATA[01 | 预习篇 · 小鲸鱼大事记（一）：初出茅庐 Cloud Foundry开启PaaS为核心构建平台层服务能力的变革 PaaS在当时被接纳的主要原因是提供了“应]]></description>
</item>
<item>
    <title>KubeEdge组件之EdgeMesh</title>
    <link>http://myleo1.github.io/kubeedge%E7%BB%84%E4%BB%B6%E4%B9%8Bedgemesh/</link>
    <pubDate>Sun, 10 Jul 2022 17:31:16 &#43;0800</pubDate>
    <author>Leo</author>
    <guid>http://myleo1.github.io/kubeedge%E7%BB%84%E4%BB%B6%E4%B9%8Bedgemesh/</guid>
    <description><![CDATA[背景 云原生容器网络发展阶段 第一阶段：Docker 容器网络，在 Docker 出现之后，也有自己的 4 种容器网络模型，比如 Host 模式、Container 模式，No]]></description>
</item>
<item>
    <title>KubeEdge架构及其核心组件</title>
    <link>http://myleo1.github.io/kubeedge%E6%9E%B6%E6%9E%84%E5%8F%8A%E5%85%B6%E6%A0%B8%E5%BF%83%E7%BB%84%E4%BB%B6/</link>
    <pubDate>Mon, 27 Jun 2022 17:30:52 &#43;0800</pubDate>
    <author>Leo</author>
    <guid>http://myleo1.github.io/kubeedge%E6%9E%B6%E6%9E%84%E5%8F%8A%E5%85%B6%E6%A0%B8%E5%BF%83%E7%BB%84%E4%BB%B6/</guid>
    <description><![CDATA[核心理念 云边协同 双向多路复用消息通道，支持边缘节点位于私有网络（无公网IP环境） Websocket+消息封装，大幅减少通信压力，高时延下仍可]]></description>
</item>
</channel>
</rss>
